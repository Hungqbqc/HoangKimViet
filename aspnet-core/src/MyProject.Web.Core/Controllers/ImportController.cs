// This file is not generated, but this comment is necessary to exclude it from StyleCop analysis 
// <auto-generated/> 
using Abp.Authorization;
using Abp.IO.Extensions;
using Abp.UI;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.IO;
using System.Threading.Tasks;

namespace MyProject.Controllers
{

     [Route("api/[controller]/[action]")]
     public class ImportController : MyProjectControllerBase
     {
          private readonly IAppFolders _appFolders;
          //private const int MaxFileSize = 5242880; //5MB

          public ImportController(IAppFolders appFolders)
          {
               _appFolders = appFolders;
          }

          [HttpPost]
          [AbpAuthorize]
          public async Task<string> CongViec()
          {
               return await ImportFile(Request.Form.Files, _appFolders.DemoUploadFolder);
          }


          private async Task<string> ImportFile(IFormFileCollection Files, string ImportFolderPath)
          {
               try
               {
                    // Process new upload files
                    if (Files == null || Files.Count <= 0)
                    {
                         throw new UserFriendlyException(L("FileNotFound"));
                    }

                    var ImportFile = Files[0];
                    return await Task.FromResult(SaveFile(ImportFolderPath, ImportFile, 1));
               }
               catch (Exception ex)
               {
                    if (ex.Message.Contains("Incorrect Content-Type"))
                         throw new UserFriendlyException(L("ModelStateInValid"));

                    throw new UserFriendlyException(ex.Message);
               }
          }

          private string SaveFile(string FolderPath, IFormFile ImportFile, long UserId)
          {
               byte[] fileBytes;
               using (var stream = ImportFile.OpenReadStream())
               {
                    fileBytes = stream.GetAllBytes();
               }

               string uploadFileName = string.Format("{0:yyyyMMdd_hhmmss}_{1}", DateTime.Now, UserId) + ImportFile.FileName.Substring(ImportFile.FileName.LastIndexOf('.'));

               // Set full path to upload file
               string uploadFilePath = Path.Combine(FolderPath, uploadFileName);

               // Save new file
               System.IO.File.WriteAllBytes(uploadFilePath, fileBytes);

               return uploadFileName;
          }
     }
}
